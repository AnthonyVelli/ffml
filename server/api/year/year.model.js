'use strict';

export default function(sequelize, DataTypes) {
  return sequelize.define('Year', {
    _id: {
      type: DataTypes.INTEGER,
      allowNull: false,
      primaryKey: true,
      autoIncrement: true
    },
    year:  DataTypes.INTEGER,
	points:  DataTypes.FLOAT,
	games:  DataTypes.FLOAT,
	team:  DataTypes.STRING,
	overall_rank:  DataTypes.FLOAT,
	age:  DataTypes.FLOAT,
	games_start:  DataTypes.FLOAT,
	pass_comp:  DataTypes.FLOAT,
	pass_att:  DataTypes.FLOAT,
	pass_yds:  DataTypes.FLOAT,
	pass_td:  DataTypes.FLOAT,
	pass_int:  DataTypes.FLOAT,
	rush_att:  DataTypes.FLOAT,
	rush_yds:  DataTypes.FLOAT,
	rush_yds_att:  DataTypes.FLOAT,
	rush_td:  DataTypes.FLOAT,
	receptions:  DataTypes.FLOAT,
	rec_yds:  DataTypes.FLOAT,
	yds_rec:  DataTypes.FLOAT,
	rec_td:  DataTypes.FLOAT,
	fant_points:  DataTypes.FLOAT,
	vbd:  DataTypes.FLOAT,
	pos_rank:  DataTypes.FLOAT,
	ovrank:  DataTypes.FLOAT,
	passYdsPts:  DataTypes.FLOAT,
	passTdsPts:  DataTypes.FLOAT,
	passIntPts:  DataTypes.FLOAT,
	rushYdsPts:  DataTypes.FLOAT,
	rushTdsPts:  DataTypes.FLOAT,
	recYdsPts:  DataTypes.FLOAT,
	recTdsPts:  DataTypes.FLOAT,
	fg30:  DataTypes.FLOAT,
	fg40:  DataTypes.FLOAT,
	fg50:  DataTypes.FLOAT,
	fgMissed:  DataTypes.FLOAT,
	pat:  DataTypes.FLOAT,
	patMissed:  DataTypes.FLOAT,
	fg30Pts:  DataTypes.FLOAT,
	fg40Pts:  DataTypes.FLOAT,
	fg50Pts:  DataTypes.FLOAT,
	fgMissedPts:  DataTypes.FLOAT,
	patPts:  DataTypes.FLOAT,
	patMissedPts:  DataTypes.FLOAT,
	sack:  DataTypes.FLOAT,
	fumlRec:  DataTypes.FLOAT,
	int:  DataTypes.FLOAT,
	defTD:  DataTypes.FLOAT,
	ptsA:  DataTypes.FLOAT,
	passYdsAPG:  DataTypes.FLOAT,
	rushYdsAPG:  DataTypes.FLOAT,
	safety:  DataTypes.FLOAT,
	kickTD:  DataTypes.FLOAT,
	pts:  DataTypes.FLOAT,
	ptsPG:  DataTypes.FLOAT,
	passYdsA:  DataTypes.FLOAT,
	rushYdsA:  DataTypes.FLOAT,
	ptsAPG:  DataTypes.FLOAT,
	td:  DataTypes.FLOAT,
	fumlRecoveryPts:  DataTypes.FLOAT,
	intCaughtPts:  DataTypes.FLOAT,
	sackPts:  DataTypes.FLOAT,
	safetyPts:  DataTypes.FLOAT,
	tdPts:  DataTypes.FLOAT,
	paPts:  DataTypes.FLOAT,
	overallRank:  DataTypes.FLOAT,
	positionRank:  DataTypes.FLOAT,
	vor:  DataTypes.FLOAT
  });
}
